structure Trivial = struct
open Basic
       
fun add a b = a + b
                    
fun add (a, b) = a + b

val add : int * int -- 1.0 --> int = fn (a, b) => a + b

val add : int * int -> int = fn (a, b) => a + b

val add : int -- 0.0 --> int -- 1.0 --> int = fn a b => a + b

val add : int -- _ --> int -- _ --> int = fn a b => a + b

val add : int -> int -> int = fn a b => a + b

fun add a b return using 1.0 = a + b

fun add a b = a + b using 1.0
                    
fun add (a, b) return using 1.0 = a + b

fun add (a, b) = ((a + b) using 3.0)

fun add a =
    let
      val c = (fn x => x) a
    in
      fn b => c + b
    end

fun id x = x

val x = id 1

val x = id true
           
end
