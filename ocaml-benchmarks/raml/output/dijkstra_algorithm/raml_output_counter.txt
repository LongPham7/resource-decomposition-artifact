The Python library for py.ml is loaded

Resource Aware ML, Version 1.5.0, June 2020

Typechecking module /home/ubuntu/cost-profiler/raml-code/data_structures/lib/dijkstra_algorithm/dijkstra_algorithm_counter.ml ...
  Typecheck successful.
  Stack-based typecheck successful.

Grouping of indices in the descending order of priorities/degrees: 
Group 0:
Analyzing function dijkstra_algorithm ...

  Trying degree
Group 1:

Group 2:
(0, (([], []), ([], []), ([], [::(*)])))(0, (([], []), ([], []), ([::(*)], [])))(0, (([], []), ([], [::(*)]), ([], [])))(0, (([], []), ([::(*)], []), ([], [])))(0, (([], [::(*)]), ([], []), ([], [])))(0, (([::(*)], []), ([], []), ([], [])))(1, (([], []), ([], []), ([], [])))
Group 3:
(0, (([], []), ([], []), ([], [])))
Indices and their corresponding LP variables: 
Group 0:
(0, (([], []), ([], []), ([], [::(*); ::(*); ::(*)]))); corresponding lp_var: 292490
(0, (([], []), ([], []), ([::(*)], [::(*); ::(*)]))); corresponding lp_var: 292493
(0, (([], []), ([], []), ([::(*); ::(*)], [::(*)]))); corresponding lp_var: 292495
(0, (([], []), ([], []), ([::(*); ::(*); ::(*)], []))); corresponding lp_var: 292496
(0, (([], []), ([], [::(*)]), ([], [::(*); ::(*)]))); corresponding lp_var: 292499
(0, (([], []), ([], [::(*)]), ([::(*)], [::(*)]))); corresponding lp_var: 292501
(0, (([], []), ([], [::(*)]), ([::(*); ::(*)], []))); corresponding lp_var: 292502
(0, (([], []), ([::(*)], []), ([], [::(*); ::(*)]))); corresponding lp_var: 292509
(0, (([], []), ([::(*)], []), ([::(*)], [::(*)]))); corresponding lp_var: 292511
(0, (([], []), ([::(*)], []), ([::(*); ::(*)], []))); corresponding lp_var: 292512
(0, (([], [::(*)]), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 292524
(0, (([], [::(*)]), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 292526
(0, (([], [::(*)]), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 292527
(0, (([::(*)], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 292545
(0, (([::(*)], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 292547
(0, (([::(*)], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 292548
(0, (([], []), ([], [::(*); ::(*)]), ([], [::(*)]))); corresponding lp_var: 292504
(0, (([], []), ([], [::(*); ::(*)]), ([::(*)], []))); corresponding lp_var: 292505
(0, (([], []), ([::(*)], [::(*)]), ([], [::(*)]))); corresponding lp_var: 292514
(0, (([], []), ([::(*)], [::(*)]), ([::(*)], []))); corresponding lp_var: 292515
(0, (([], []), ([::(*); ::(*)], []), ([], [::(*)]))); corresponding lp_var: 292518
(0, (([], []), ([::(*); ::(*)], []), ([::(*)], []))); corresponding lp_var: 292519
(0, (([], [::(*)]), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 292529
(0, (([], [::(*)]), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 292530
(0, (([], [::(*)]), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 292533
(0, (([], [::(*)]), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 292534
(0, (([::(*)], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 292550
(0, (([::(*)], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 292551
(0, (([::(*)], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 292554
(0, (([::(*)], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 292555
(0, (([], [::(*); ::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 292538
(0, (([], [::(*); ::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 292539
(0, (([::(*)], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 292559
(0, (([::(*)], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 292560
(0, (([::(*); ::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292565
(0, (([::(*); ::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 292566
(0, (([], []), ([], [::(*); ::(*); ::(*)]), ([], []))); corresponding lp_var: 292506
(0, (([], []), ([::(*)], [::(*); ::(*)]), ([], []))); corresponding lp_var: 292516
(0, (([], []), ([::(*); ::(*)], [::(*)]), ([], []))); corresponding lp_var: 292520
(0, (([], []), ([::(*); ::(*); ::(*)], []), ([], []))); corresponding lp_var: 292521
(0, (([], [::(*)]), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 292531
(0, (([], [::(*)]), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 292535
(0, (([], [::(*)]), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 292536
(0, (([::(*)], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 292552
(0, (([::(*)], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 292556
(0, (([::(*)], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 292557
(0, (([], [::(*); ::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 292540
(0, (([], [::(*); ::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 292541
(0, (([::(*)], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 292561
(0, (([::(*)], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 292562
(0, (([::(*); ::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292567
(0, (([::(*); ::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 292568
(0, (([], [::(*); ::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 292542
(0, (([::(*)], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 292563
(0, (([::(*); ::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292569
(0, (([::(*); ::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 292570
(1, (([], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 292573
(1, (([], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 292575
(1, (([], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 292576
(1, (([], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 292578
(1, (([], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 292579
(1, (([], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 292582
(1, (([], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 292583
(1, (([], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 292587
(1, (([], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 292588
(1, (([::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292593
(1, (([::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 292594
(1, (([], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 292580
(1, (([], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 292584
(1, (([], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 292585
(1, (([], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 292589
(1, (([], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 292590
(1, (([::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292595
(1, (([::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 292596
(1, (([], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 292591
(1, (([::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292597
(1, (([::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 292598
(2, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292600
(2, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 292601
(2, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292602
(2, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 292603
(2, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292604
(2, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 292605
(3, (([], []), ([], []), ([], []))); corresponding lp_var: 292606
Group 1:
(0, (([], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 292489
(0, (([], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 292492
(0, (([], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 292494
(0, (([], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 292498
(0, (([], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 292500
(0, (([], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 292508
(0, (([], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 292510
(0, (([], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 292523
(0, (([], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 292525
(0, (([::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292544
(0, (([::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 292546
(0, (([], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 292503
(0, (([], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 292513
(0, (([], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 292517
(0, (([], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 292528
(0, (([], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 292532
(0, (([::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292549
(0, (([::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 292553
(0, (([], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 292537
(0, (([::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292558
(0, (([::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 292564
(1, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292572
(1, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 292574
(1, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292577
(1, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 292581
(1, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292586
(1, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 292592
(2, (([], []), ([], []), ([], []))); corresponding lp_var: 292599
Group 2:
(0, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 292488
(0, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 292491
(0, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 292497
(0, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 292507
(0, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 292522
(0, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 292543
(1, (([], []), ([], []), ([], []))); corresponding lp_var: 292571
Group 3:
(0, (([], []), ([], []), ([], []))); corresponding lp_var: 292607


== dijkstra_algorithm :

  [(int * float) list array;
                             ('a list * int list) * ('b list * int list) *
                               ('c list * int list)] ->
                             (int * distance) list

  Non-zero annotations of the argument:
         4  <--  (1, (([], []), ([], [::(*)]), ([], [::(*)])))
         7  <--  (1, (([], [::(*)]), ([], []), ([], [])))
         4  <--  (1, (([], []), ([], []), ([], [::(*)])))
         3  <--  (1, (([], []), ([], []), ([], [])))
         7  <--  (0, (([], []), ([], []), ([], [])))

  Non-zero annotations of result:

  Simplified bound:
     7 + 4*A*E*K + 4*E*K + 3*K + 7*K*Z
   where
     E is the number of ::-nodes of the 2nd component of the 3rd component of the 2nd component of the argument
     A is the number of ::-nodes of the 2nd component of the 2nd component of the 2nd component of the argument
     Z is the number of ::-nodes of the 2nd component of the 1st component of the 2nd component of the argument
     K is the length of the 1st component of the argument

--
  Mode:          upper
  Metric:        ticks
  Degree:        3
  Run time:      3179.27 seconds
  #Constraints:  266181

====

