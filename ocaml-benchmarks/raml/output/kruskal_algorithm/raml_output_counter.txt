The Python library for py.ml is loaded

Resource Aware ML, Version 1.5.0, June 2020

Typechecking module kruskal_algorithm_counter.ml ...
  Typecheck successful.
  Stack-based typecheck successful.

Grouping of indices in the descending order of priorities/degrees: 
Group 0:
Analyzing function kruskal_algorithm ...

  Trying degree
Group 1:
([], ((*, []), (*, [::(*); ::(*)])))([], ((*, [::(*)]), (*, [::(*)])))([], ((*, [::(*); ::(*)]), (*, [])))([::(*, [])], ((*, []), (*, [::(*)])))([::(*, [])], ((*, [::(*)]), (*, [])))([::(*, [::(*, *)])], ((*, []), (*, [])))([::(*, []); ::(*, [])], ((*, []), (*, [])))
Group 2:
([], ((*, []), (*, [::(*)])))([], ((*, [::(*)]), (*, [])))([::(*, [])], ((*, []), (*, [])))
Group 3:
([], ((*, []), (*, [])))
Indices and their corresponding LP variables: 
Group 0:
([], ((*, []), (*, [::(*); ::(*); ::(*)]))); corresponding lp_var: 58039
([], ((*, [::(*)]), (*, [::(*); ::(*)]))); corresponding lp_var: 58082
([], ((*, [::(*); ::(*)]), (*, [::(*)]))); corresponding lp_var: 58089
([], ((*, [::(*); ::(*); ::(*)]), (*, []))); corresponding lp_var: 58097
([::(*, [])], ((*, []), (*, [::(*); ::(*)]))); corresponding lp_var: 57996
([::(*, [])], ((*, [::(*)]), (*, [::(*)]))); corresponding lp_var: 58066
([::(*, [])], ((*, [::(*); ::(*)]), (*, []))); corresponding lp_var: 58073
([::(*, [::(*, *)])], ((*, []), (*, [::(*)]))); corresponding lp_var: 57974
([::(*, [::(*, *)])], ((*, [::(*)]), (*, []))); corresponding lp_var: 58057
([::(*, []); ::(*, [])], ((*, []), (*, [::(*)]))); corresponding lp_var: 57965
([::(*, []); ::(*, [])], ((*, [::(*)]), (*, []))); corresponding lp_var: 58048
([::(*, [::(*, *); ::(*, *)])], ((*, []), (*, []))); corresponding lp_var: 57903
([::(*, []); ::(*, [::(*, *)])], ((*, []), (*, []))); corresponding lp_var: 57900
([::(*, [::(*, *)]); ::(*, [])], ((*, []), (*, []))); corresponding lp_var: 57902
([::(*, []); ::(*, []); ::(*, [])], ((*, []), (*, []))); corresponding lp_var: 57899
Group 1:
([], ((*, []), (*, [::(*); ::(*)]))); corresponding lp_var: 58083
([], ((*, [::(*)]), (*, [::(*)]))); corresponding lp_var: 58088
([], ((*, [::(*); ::(*)]), (*, []))); corresponding lp_var: 58096
([::(*, [])], ((*, []), (*, [::(*)]))); corresponding lp_var: 58067
([::(*, [])], ((*, [::(*)]), (*, []))); corresponding lp_var: 58072
([::(*, [::(*, *)])], ((*, []), (*, []))); corresponding lp_var: 58060
([::(*, []); ::(*, [])], ((*, []), (*, []))); corresponding lp_var: 58051
Group 2:
([], ((*, []), (*, [::(*)]))); corresponding lp_var: 58090
([], ((*, [::(*)]), (*, []))); corresponding lp_var: 58095
([::(*, [])], ((*, []), (*, []))); corresponding lp_var: 58076
Group 3:
([], ((*, []), (*, []))); corresponding lp_var: 58100


== kruskal_algorithm :

  [(int * (int * float) list) list;
                            ('a * 'b list) * ('c * int list)] ->
                            (int * int * float) list

  Non-zero annotations of the argument:
       3.5  <--  ([::(*, [::(*, *)])], ((*, []), (*, [::(*)])))
         1  <--  ([::(*, [::(*, *)])], ((*, []), (*, [])))
       3.5  <--  ([::(*, [])], ((*, []), (*, [])))
       1.5  <--  ([], ((*, [::(*)]), (*, [])))
         7  <--  ([], ((*, []), (*, [])))

  Non-zero annotations of result:

  Simplified bound:
     7 + 1*L*M + 3.5*L*M*R + 3.5*M + 1.5*Y
   where
     R is the number of ::-nodes of the 2nd component of the 2nd component of the 2nd component of the argument
     Y is the number of ::-nodes of the 2nd component of the 1st component of the 2nd component of the argument
     M is the number of ::-nodes of the 1st component of the argument
     L is the maximal number of ::-nodes of the 2nd component in the ::-nodes of the 1st component of the argument

--
  Mode:          upper
  Metric:        ticks
  Degree:        3
  Run time:      96.88 seconds
  #Constraints:  57606

====

