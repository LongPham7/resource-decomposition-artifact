The Python library for py.ml is loaded

Resource Aware ML, Version 1.5.0, June 2020

Typechecking module /home/ubuntu/cost-profiler/raml-code/data_structures/lib/prim_algorithm/prim_algorithm_counter.ml ...
  Typecheck successful.
  Stack-based typecheck successful.

Grouping of indices in the descending order of priorities/degrees: 
Group 0:
Analyzing function prim_algorithm ...

  Trying degree
Group 1:

Group 2:
(0, (([], []), ([], []), ([], [::(*)])))(0, (([], []), ([], []), ([::(*)], [])))(0, (([], []), ([], [::(*)]), ([], [])))(0, (([], []), ([::(*)], []), ([], [])))(0, (([], [::(*)]), ([], []), ([], [])))(0, (([::(*)], []), ([], []), ([], [])))(1, (([], []), ([], []), ([], [])))
Group 3:
(0, (([], []), ([], []), ([], [])))
Indices and their corresponding LP variables: 
Group 0:
(0, (([], []), ([], []), ([], [::(*); ::(*); ::(*)]))); corresponding lp_var: 259091
(0, (([], []), ([], []), ([::(*)], [::(*); ::(*)]))); corresponding lp_var: 259094
(0, (([], []), ([], []), ([::(*); ::(*)], [::(*)]))); corresponding lp_var: 259096
(0, (([], []), ([], []), ([::(*); ::(*); ::(*)], []))); corresponding lp_var: 259097
(0, (([], []), ([], [::(*)]), ([], [::(*); ::(*)]))); corresponding lp_var: 259100
(0, (([], []), ([], [::(*)]), ([::(*)], [::(*)]))); corresponding lp_var: 259102
(0, (([], []), ([], [::(*)]), ([::(*); ::(*)], []))); corresponding lp_var: 259103
(0, (([], []), ([::(*)], []), ([], [::(*); ::(*)]))); corresponding lp_var: 259110
(0, (([], []), ([::(*)], []), ([::(*)], [::(*)]))); corresponding lp_var: 259112
(0, (([], []), ([::(*)], []), ([::(*); ::(*)], []))); corresponding lp_var: 259113
(0, (([], [::(*)]), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 259125
(0, (([], [::(*)]), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 259127
(0, (([], [::(*)]), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 259128
(0, (([::(*)], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 259146
(0, (([::(*)], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 259148
(0, (([::(*)], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 259149
(0, (([], []), ([], [::(*); ::(*)]), ([], [::(*)]))); corresponding lp_var: 259105
(0, (([], []), ([], [::(*); ::(*)]), ([::(*)], []))); corresponding lp_var: 259106
(0, (([], []), ([::(*)], [::(*)]), ([], [::(*)]))); corresponding lp_var: 259115
(0, (([], []), ([::(*)], [::(*)]), ([::(*)], []))); corresponding lp_var: 259116
(0, (([], []), ([::(*); ::(*)], []), ([], [::(*)]))); corresponding lp_var: 259119
(0, (([], []), ([::(*); ::(*)], []), ([::(*)], []))); corresponding lp_var: 259120
(0, (([], [::(*)]), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 259130
(0, (([], [::(*)]), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 259131
(0, (([], [::(*)]), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 259134
(0, (([], [::(*)]), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 259135
(0, (([::(*)], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 259151
(0, (([::(*)], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 259152
(0, (([::(*)], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 259155
(0, (([::(*)], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 259156
(0, (([], [::(*); ::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 259139
(0, (([], [::(*); ::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 259140
(0, (([::(*)], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 259160
(0, (([::(*)], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 259161
(0, (([::(*); ::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259166
(0, (([::(*); ::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 259167
(0, (([], []), ([], [::(*); ::(*); ::(*)]), ([], []))); corresponding lp_var: 259107
(0, (([], []), ([::(*)], [::(*); ::(*)]), ([], []))); corresponding lp_var: 259117
(0, (([], []), ([::(*); ::(*)], [::(*)]), ([], []))); corresponding lp_var: 259121
(0, (([], []), ([::(*); ::(*); ::(*)], []), ([], []))); corresponding lp_var: 259122
(0, (([], [::(*)]), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 259132
(0, (([], [::(*)]), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 259136
(0, (([], [::(*)]), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 259137
(0, (([::(*)], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 259153
(0, (([::(*)], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 259157
(0, (([::(*)], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 259158
(0, (([], [::(*); ::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 259141
(0, (([], [::(*); ::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 259142
(0, (([::(*)], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 259162
(0, (([::(*)], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 259163
(0, (([::(*); ::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259168
(0, (([::(*); ::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 259169
(0, (([], [::(*); ::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 259143
(0, (([::(*)], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 259164
(0, (([::(*); ::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259170
(0, (([::(*); ::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 259171
(1, (([], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 259174
(1, (([], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 259176
(1, (([], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 259177
(1, (([], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 259179
(1, (([], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 259180
(1, (([], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 259183
(1, (([], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 259184
(1, (([], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 259188
(1, (([], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 259189
(1, (([::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259194
(1, (([::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 259195
(1, (([], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 259181
(1, (([], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 259185
(1, (([], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 259186
(1, (([], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 259190
(1, (([], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 259191
(1, (([::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259196
(1, (([::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 259197
(1, (([], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 259192
(1, (([::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259198
(1, (([::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 259199
(2, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259201
(2, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 259202
(2, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259203
(2, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 259204
(2, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259205
(2, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 259206
(3, (([], []), ([], []), ([], []))); corresponding lp_var: 259207
Group 1:
(0, (([], []), ([], []), ([], [::(*); ::(*)]))); corresponding lp_var: 259090
(0, (([], []), ([], []), ([::(*)], [::(*)]))); corresponding lp_var: 259093
(0, (([], []), ([], []), ([::(*); ::(*)], []))); corresponding lp_var: 259095
(0, (([], []), ([], [::(*)]), ([], [::(*)]))); corresponding lp_var: 259099
(0, (([], []), ([], [::(*)]), ([::(*)], []))); corresponding lp_var: 259101
(0, (([], []), ([::(*)], []), ([], [::(*)]))); corresponding lp_var: 259109
(0, (([], []), ([::(*)], []), ([::(*)], []))); corresponding lp_var: 259111
(0, (([], [::(*)]), ([], []), ([], [::(*)]))); corresponding lp_var: 259124
(0, (([], [::(*)]), ([], []), ([::(*)], []))); corresponding lp_var: 259126
(0, (([::(*)], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259145
(0, (([::(*)], []), ([], []), ([::(*)], []))); corresponding lp_var: 259147
(0, (([], []), ([], [::(*); ::(*)]), ([], []))); corresponding lp_var: 259104
(0, (([], []), ([::(*)], [::(*)]), ([], []))); corresponding lp_var: 259114
(0, (([], []), ([::(*); ::(*)], []), ([], []))); corresponding lp_var: 259118
(0, (([], [::(*)]), ([], [::(*)]), ([], []))); corresponding lp_var: 259129
(0, (([], [::(*)]), ([::(*)], []), ([], []))); corresponding lp_var: 259133
(0, (([::(*)], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259150
(0, (([::(*)], []), ([::(*)], []), ([], []))); corresponding lp_var: 259154
(0, (([], [::(*); ::(*)]), ([], []), ([], []))); corresponding lp_var: 259138
(0, (([::(*)], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259159
(0, (([::(*); ::(*)], []), ([], []), ([], []))); corresponding lp_var: 259165
(1, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259173
(1, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 259175
(1, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259178
(1, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 259182
(1, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259187
(1, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 259193
(2, (([], []), ([], []), ([], []))); corresponding lp_var: 259200
Group 2:
(0, (([], []), ([], []), ([], [::(*)]))); corresponding lp_var: 259089
(0, (([], []), ([], []), ([::(*)], []))); corresponding lp_var: 259092
(0, (([], []), ([], [::(*)]), ([], []))); corresponding lp_var: 259098
(0, (([], []), ([::(*)], []), ([], []))); corresponding lp_var: 259108
(0, (([], [::(*)]), ([], []), ([], []))); corresponding lp_var: 259123
(0, (([::(*)], []), ([], []), ([], []))); corresponding lp_var: 259144
(1, (([], []), ([], []), ([], []))); corresponding lp_var: 259172
Group 3:
(0, (([], []), ([], []), ([], []))); corresponding lp_var: 259208


== prim_algorithm :

  [(int * float) list array;
                         ('a list * int list) * ('b list * int list) *
                           ('c list * int list)] ->
                         (int * distance) list *
                           (('a list * int list) * ('b list * int list) *
                             ('c list * int list))

  Non-zero annotations of the argument:
         4  <--  (1, (([], []), ([], [::(*)]), ([], [::(*)])))
         7  <--  (1, (([], [::(*)]), ([], []), ([], [])))
         3  <--  (1, (([], []), ([], []), ([], [::(*)])))
         4  <--  (1, (([], []), ([], []), ([], [])))
         7  <--  (0, (([], []), ([], []), ([], [])))

  Non-zero annotations of result:

  Simplified bound:
     7 + 4*A*E*K + 3*E*K + 4*K + 7*K*Z
   where
     E is the number of ::-nodes of the 2nd component of the 3rd component of the 2nd component of the argument
     A is the number of ::-nodes of the 2nd component of the 2nd component of the 2nd component of the argument
     Z is the number of ::-nodes of the 2nd component of the 1st component of the 2nd component of the argument
     K is the length of the 1st component of the argument

--
  Mode:          upper
  Metric:        ticks
  Degree:        3
  Run time:      2524.40 seconds
  #Constraints:  235168

====

